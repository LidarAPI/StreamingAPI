REQUEST NAME;REQUEST EVENT NAME;REQUEST DESCRIPTION;"PAYLOAD PARAMETERS (NAME;TYPE;OPTIONAL;DESCRIPTION;OPTIONAL_ENUM_SEPARATED_BY_COMMAS)";"REQUEST EXAMPLES (JSONs SEPARATED by "";"")";IMMEDIATE RESPONSE EVENT NAME;RECURRING RESPONSES EVENT NAMES (SEPARATED BY COMMAS);"ERRORS EXAMPLES (JSONs SEPARATAED BY "";"")"
Subscribe;subscribe;"This is the message to subscribe to available data. 
You need to send a subscription message for each wanted data.
When this message is sent, you immediately receive an aknownledgment about subscription status, and then start to receive subscribed data regularly (depending on subscribed data).";"name;String;Required;Name of wanted data to subscribe;""global_status"",""device_status"",""activity"",""environmental_data_raw"",""sequence_start"",""radial_wind_data"",""wind_reconstruction_data"",""radial_beta_data"",""radial_absolute_beta_data"",""service_availability""";"{
   ""token"": ""WW91ciBhdXRoZW50aWNhdGlvbiB0b2tlbiBnb2VzIGhlcmUu"",
   ""event"": ""subscribe"",
   ""payload"": {
      ""name"": ""service_availability""
   }
};
{
   ""token"": ""sq91ciBhdXRoZW50aWNhdGlvbiB0bdaebiBnb2VzIGhlcmUu"",
   ""event"": ""subscribe"",
   ""payload"": {
      ""name"": ""global_status""
   }
}";subscription_status;global_status,device_status,activity,environmental_data_raw,sequence_start,radial_wind_data,wind_reconstruction_data,radial_beta_data,radial_absolute_beta_data,service_availability;"{
   ""event"": ""error"",
   ""payload"": {
      ""error"": ""parameter_not_valid"",
      ""explanation"": ""Value 'example' for 'name' parameter is not valid"",
      ""request"": {
   ""token"": ""WW91ciBhdXRoZW50aWNhdGlvbiB0b2tlbiBnb2VzIGhlcmUu"",
   ""event"": ""subscribe"",
   ""payload"": {
      ""name"": ""example""
   }
}
   }
}"
Unsubscribe;unsubscribe;"This is the message to unsubscribe to data. 
You need to send a unsubscription message for each wanted data.
When this message is sent, you immediately receive an aknownledgment about subscription status, and stop receiving unsubscribed data.";"name;String;Required;Name of wanted data to unsubscribe;""global_status"",""device_status"",""activity"",""environmental_data_raw"",""sequence_start"",""radial_wind_data"",""wind_reconstruction_data"",""radial_beta_data"",""radial_absolute_beta_data"",""service_availability""";"{
   ""token"": ""WW91ciBhdXRoZW50aWNhdGlvbiB0b2tlbiBnb2VzIGhlcmUu"",
   ""event"": ""unsubscribe"",
   ""payload"": {
      ""name"": ""service_availability""
   }
};
{
   ""token"": ""sq91ciBhdXRoZW50aWNhdGlvbiB0bdaebiBnb2VzIGhlcmUu"",
   ""event"": ""unsubscribe"",
   ""payload"": {
      ""name"": ""global_status""
   }
}";subscription_status;;"{
   ""event"": ""error"",
   ""payload"": {
      ""error"": ""parameter_not_valid"",
      ""explanation"": ""Value 'example2' for 'name' parameter is not valid"",
      ""request"": {
   ""token"": ""WW91ciBhdXRoZW50aWNhdGlvbiB0b2tlbiBnb2VzIGhlcmUu"",
   ""event"": ""unsubscribe"",
   ""payload"": {
      ""name"": ""example2""
   }
}
   }
}"
;;;;;;;
;;;;;;;
;;;;;;;
DELIMITER;<== DO NOT REMOVE THIS KEYWORD AND KEEP RESPONSES HEADERS IN BELOW LINE;;;;;;
RESPONSE NAME;RESPONSE EVENT NAME;RESPONSE DESCRIPTION;"PAYLOAD PARAMETERS (NAME;TYPE;OPTIONAL;DESCRIPTION;OPTIONAL_ENUM_SEPARATED_BY_COMMAS)";RESPONSE EXAMPLES;RESPONSE PERMISSION;;
Subscription status;subscription_status;Message sent as acknowledgment of subscription or unsubscription;"name;String;Required;Data name;""global_status"",""device_status"",""activity"",""environmental_data_raw"",""sequence_start"",""radial_wind_data"",""wind_reconstruction_data"",""radial_beta_data"",""radial_absolute_beta_data"",""service_availability""
is_subscribed;Bool;Required;Subscription status;true,false";"{
   ""event"": ""subscription_status"",
   ""payload"": {
      ""name"": ""global_status"",
      ""is_subscribed"": true
   }
}";;;
Global status;global_status;"Lidar global status, sent when ""status"" value changes";"status;String;Required;Global status;""OK"", ""WARNING"", ""CRITICAL"", ""UNKNOWN""
explanation;String;Required;Status explanation
code;Number;Required;Status code
timestamp;String;Required;Timestamp following ISO8601 format (example 2018-05-11T02:12:35) expressed in timezone set.";"{
   ""event"": ""global_status"",
   ""payload"": {
      ""status"": ""OK"",
  ""explanation"": ""LIDAR ACQUIRING"",
  ""code"":54,
""timestamp"":""2022-01-01T08:54:12""   
   }
}";viewer;;
Device status;device_status;Device status, sent when a device status is refreshed;"device_name;String;Required;Device name
status;String;Required;Global status;""OK"", ""WARNING"", ""CRITICAL"", ""UNKNOWN""
explanation;String;Required;Status explanation
code;Number;Required;Status code
timestamp;String;Required;Timestamp following ISO8601 format (example 2018-05-11T02:12:35) expressed in timezone set.";"{
   ""event"": ""device_status"",
   ""payload"": {
     ""device_name"": ""Inclinometer"",
      ""status"": ""OK"",
  ""explanation"": ""Inclinometer OK"",
  ""code"":7,
""timestamp"":""2022-01-01T08:54:12""   
   }
}";viewer;;
Activity;activity;Lidar activity, sent when a new activity is logged;"timestamp;String;Required;Activity timestamp
action;String;Required;Action explanation;""STOP ACQUIRING"",""START ACQUIRING"",""SHUTDOWN LIDAR PC"",""REBOOT LIDAR PC"",""STOP SERVER PROCESS"",""RESTART SERVER PROCESS"",""LOG OPERATOR IN"",""LOG OPERATOR OUT"",""CONFIGURE"",""LOG USER IN"",""SHUTDOWN PC UPS"",""BOOT LIDAR PC""
user;String;Required;User who executed the action";"{
   ""event"": ""activity"",
   ""payload"": {
""timestamp"": ""2018-05-12T09:00:00.123"",
      ""action"": ""STOP ACQUIRING"",
        ""user"": ""expert""
   }
}";standard;;
Environmental data raw;environmental_data_raw;Raw environmental data, sent when a value is available;"name;String;Required;Data name;
unit;String;Required;Unit
value;Number;Required;Value
timestamp;String;Required;Timestamp following ISO8601 format (example 2018-05-11T02:12:35.123) expressed in timezone set.";"{
   ""event"": ""environmental_data_raw"",
   ""payload"": {
      ""name"": ""roll"",
        ""unit"": ""degrees"",
        ""value"": 0.123,
       ""timestamp"":""2022-01-01T08:54:12.134""
   }
}";standard;;
Sequence start;sequence_start;New sequence start;"sequence_index;Number	;Required;Identification number of the sequence
scan_id;Number;Required;Id of the scan
res_id;Number;Required;Id of the resolution
settings_id;Number;Required;Id of the settings
range_gate_length;String;Required;Radial dimension of range gates
range;Number[];Required;Distance along the line of sight, between the instrument and the center of each range gate
measurement_height;Number[];Required;Vertical distance normal to the ground, between the instrument and the center of each range gate. (null for scan different from DBS or VAD)
timestamp;String;Required;Timestamp following ISO8601 format (example 2018-05-11T02:12:35.123) expressed in timezone set.";"{
   ""event"": ""sequence_start"",
   ""payload"": {
""timestamp"":""2022-01-01T08:54:12.123"",
      ""sequence_index"":190,
""scan_id"": 12,
""res_id"": 13,
""settings_id"": 23,
""range_gate_length"":""25m"",
""range"": [50,75,100],
""measurement_height"": null
   }
}";standard;;
Radial wind data;radial_wind_data;New radial wind data;"sequence_index;Number	;Required;Identification number of the sequence
sweep_index;Number;Required;Identification number of the sweep
timestamp;String;Required;Timestamp at the end of each ray measurement following ISO8601 format (example 2018-05-11T02:12:35.123) expressed in timezone set.
azimuth;Number;Required;Scanning head's azimuth angle relative to true north when each measurement finished. 0 to 360. 0 is the North, 90 is the East. This angle only incorporates azimuth_correction. The Lidar is not supposed to be moving.
elevation;Number;Required;Scanning head's elevation angle relative to horizontal plane when each measurement finished. -90 to 90. 90 is the zenith. This angle does not incorporate any automatic corrections. The Lidar is not supposed to be moving
ray_index;Number;Required;Index of the ray
measurement;Object;Required;Contains following variables: cnr, radial_wind_speed, doppler_spectrum_width, doppler_spectrum_mean_error, radial_wind_speed_ci, radial_wind_speed_status. Each variable is an array of N values, with N the number of range gates..";"{
   ""event"": ""radial_wind_data"",
   ""payload"": {
      ""sequence_index"":190,
""sweep_index"":1,
""timestamp"": ""2012-01-31T10:00:01.123"",
""azimuth"": 30,
""elevation"": 75,
""ray_index"":0,
""measurement"": {""cnr"": [4.02,3.2,5], ""radial_wind_speed"":[1.4,4.6,8.0], ""doppler_spectrum_width"":[3.7,2.5,2.9], ""doppler_spectrum_mean_error"":[0.1,0.5,0.4], ""radial_wind_speed_ci"":[80.1,40.2,90.7], ""radial_wind_speed_status"":[1,0,1]}
   }
}";standard;;
Wind reconstruction data;wind_reconstruction_data;New wind reconstruction data;"sequence_index;Number	;Required;Identification number of the sequence
sweep_index;Number;Required;Identification number of the sweep
timestamp;String;Required;Timestamp at the end of each ray measurement following ISO8601 format (example 2018-05-11T02:12:35.123) expressed in timezone set.
azimuth;Number;Required;Scanning head's azimuth angle relative to true north when each measurement finished. 0 to 360. 0 is the North, 90 is the East. This angle only incorporates azimuth_correction. The Lidar is not supposed to be moving.
elevation;Number;Required;Scanning head's elevation angle relative to horizontal plane when each measurement finished. -90 to 90. 90 is the zenith. This angle does not incorporate any automatic corrections. The Lidar is not supposed to be moving
ray_index;Number;Required;Index of the ray
measurement;Object;Required;Contains following variables: horizontal_wind_speed, vertical_wind_speed, wind_direction, wind_speed_ci, wind_speed_status. Each variable is an array of N values, with N the number of range gates.";"{
   ""event"": ""wind_reconstruction_data"",
   ""payload"": {
      ""sequence_index"":190,
""sweep_index"":1,
""timestamp"": ""2012-01-31T10:00:01.123"",
""azimuth"": 30,
""elevation"": 75,
""ray_index"":0,
""measurement"": {""horizontal_wind_speed"":[1.4,4.6,8.0], ""vertical_wind_speed"":[3.7,2.5,2.9], ""wind_direction"":[90.1,40.5,0.4], ""wind_speed_ci"":[80.1,40.2,90.7], ""wind_speed_status"":[1,0,1]}
   }
}";standard;;
Radial beta data;radial_beta_data;New radial beta data;"sequence_index;Number	;Required;Identification number of the sequence
sweep_index;Number;Required;Identification number of the sweep
timestamp;String;Required;Timestamp at the end of each ray measurement following ISO8601 format (example 2018-05-11T02:12:35.123) expressed in timezone set.
azimuth;Number;Required;Scanning head's azimuth angle relative to true north when each measurement finished. 0 to 360. 0 is the North, 90 is the East. This angle only incorporates azimuth_correction. The Lidar is not supposed to be moving.
elevation;Number;Required;Scanning head's elevation angle relative to horizontal plane when each measurement finished. -90 to 90. 90 is the zenith. This angle does not incorporate any automatic corrections. The Lidar is not supposed to be moving
ray_index;Number;Required;Index of the ray
measurement;Object;Required;Contains following variables: relative_beta, radial_wind_speed_status, instrumental_function_x_max, instrumental_function_y_average, instrumental_function_amplitude, instrumental_function_half_height_width, instrumental_function_status. Each variable is an array of N values, with N the number of range gates.";"{
   ""event"": ""radial_beta_data"",
   ""payload"": {
      ""sequence_index"":190,
     ""sweep_index"":1,
""timestamp"": ""2012-01-31T10:00:01.123"",
""azimuth"": 30,
""elevation"": 75,
""ray_index"":0,
""measurement"": {""relative_beta"":[1.4,4.6,8.0], ""radial_wind_speed_status"":[3.7,2.5,2.9], ""instrumental_function_x_max"":[90.1,40.5,0.4], ""instrumental_function_y_average"":[80.1,40.2,90.7], ""instrumental_function_amplitude"":[1.1,0.1,5.1], ""instrumental_function_half_height_width"":[0.4, 0.8, 1.5], ""instrumental_function_status"": [1, 0, 1]}
   }
}";standard;;
Radial absolute beta data;radial_absolute_beta_data;New radial absolute beta data;"sequence_index;Number	;Required;Identification number of the sequence
sweep_index;Number;Required;Identification number of the sweep
timestamp;String;Required;Timestamp at the end of each ray measurement following ISO8601 format (example 2018-05-11T02:12:35.123) expressed in timezone set.
azimuth;Number;Required;Scanning head's azimuth angle relative to true north when each measurement finished. 0 to 360. 0 is the North, 90 is the East. This angle only incorporates azimuth_correction. The Lidar is not supposed to be moving.
elevation;Number;Required;Scanning head's elevation angle relative to horizontal plane when each measurement finished. -90 to 90. 90 is the zenith. This angle does not incorporate any automatic corrections. The Lidar is not supposed to be moving
ray_index;Number;Required;Index of the ray
measurement;Object;Required;Contains following variables: absolute_beta, radial_wind_speed_status, instrumental_function_x_max, instrumental_function_y_average, instrumental_function_amplitude, instrumental_function_half_height_width, instrumental_function_status. Each variable is an array of N values, with N the number of range gates.";"{
   ""event"": ""radial_absolute_beta_data"",
   ""payload"": {
      ""sequence_index"":190,
""sweep_index"":1,
""timestamp"": ""2012-01-31T10:00:01.123"",
""azimuth"": 30,
""elevation"": 75,
""ray_index"":0,
""measurement"": {""absolute_beta"":[1.4,4.6,8.0], ""radial_wind_speed_status"":[3.7,2.5,2.9], ""instrumental_function_x_max"":[90.1,40.5,0.4], ""instrumental_function_y_average"":[80.1,40.2,90.7], ""instrumental_function_amplitude"":[1.1,0.1,5.1], ""instrumental_function_half_height_width"":[0.4, 0.8, 1.5], ""instrumental_function_status"": [1, 0, 1]}
   }
}";standard;;
Error;error;General error object, sent by server when incoming request is invalid;"error;String;Required;Error keyword
explanation;String;Required;Error explanation
request;Object;Optional;The request sent by client resulting in this error. This parameter may be absent depending on the returned error.";"{
   ""event"": ""error"",
   ""payload"": {
      ""error"": ""event_not_valid"",
      ""explanation"": ""Event 'example' does not exist"",
      ""request"": {
   ""token"": ""WW91ciBhdXRoZW50aWNhdGlvbiB0b2tlbiBnb2VzIGhlcmUu"",
   ""event"": ""example"",
   ""payload"": {
      ""parameter"": ""value""
   }
}
   }
}";;;
Service availability;service_availability;Message informing about service availability, sent at least every minute or when service becomes available/unavailable. When service is not available, most of subscriptions do not send new data until it becomes available again.;"available;Bool;Required;Service availability;true,false";"{
   ""event"": ""service_availability"",
   ""payload"": {
      ""available"": true
   }
}";viewer;;
